/**
 * 
 */
package com.example.demo3.controller;



import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo3.exception.UserNotFoundException;
import com.example.demo3.model.User;
import com.example.demo3.service.UserService;

import jakarta.validation.Valid;

/**
 * @author Admin
 *
 */
@RestController
@RequestMapping(value = "/api/v1")
public class UserController {
	@Autowired
	private UserService userService;
	
	@RequestMapping(path = "/users", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public List<User> getUsers(){
		return userService.getUsers();
	}
	
	@RequestMapping(path = "/user/{id}", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public User getUsersById(@PathVariable Integer id){
		return userService.getUserById(id).orElseThrow(UserNotFoundException::new);
	}
	
	@RequestMapping(path = "/user", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public User getUserByName(@RequestParam(required = true, name = "name") String name){
		return userService.getUserByName(name).orElseThrow(UserNotFoundException::new);
	}
	
	@RequestMapping(path = "/user", produces = MediaType.APPLICATION_JSON_VALUE, method =RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public User createUser(@Valid @RequestBody User user) {
        return userService.saveUser(user, true);
    }
	
	@RequestMapping(path = "/user/{id}", produces = MediaType.APPLICATION_JSON_VALUE, method =RequestMethod.PUT, consumes = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public User updateUser(@Valid @RequestBody User user,@PathVariable Integer id) {
        return userService.saveUser(user, false);
    }
}
